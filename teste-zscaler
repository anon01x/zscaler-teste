<?php

phpinfo();

$teste = new \Teste();
$teste->run();

// 22/05/25

 private static function getTrace($exception): string
    {
        $formattedtrace = '<table class="table">';

        foreach ($exception->getTrace() as $trace) {
            $formattedtrace .= '<tr>';
            $formattedtrace .= '<td>';

            $file = $trace['file'] ?? 'n/a';
            $formattedtrace .= "File: <b>$file</b> ";

            $line = $trace['line'] ?? 'n/a';
            $formattedtrace .= "on line <b>$line</b> ";
            
            $class = $trace['class'] ?? '';
            $type = $trace['type'] ?? '';
            $formattedtrace .= 'in function <b>' . $class . $type . $trace['function'] . '</b>';
            $formattedtrace .= '</td>';
            $formattedtrace .= '</tr>';
        }

 public function __invoke(Throwable $exception, bool $displayErrorDetails): string
    {
        $content = $exception->getMessage();
        $title = self::$header[get_class($exception)] ?? 'Core error';

        if ($exception instanceof HttpNotFoundException)
        {
            $title = 'Page not found';
            $content = 'This page does not exist';
        }

        if ($exception instanceof \InvalidArgumentException)
        {
            $title = 'Invalid user input';
        }

        if ($displayErrorDetails) {
            $content .= self::getTrace($exception);
        }
